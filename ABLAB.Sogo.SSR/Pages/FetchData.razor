@page "/fetchdata"
@using ABLAB.Sogo.SSR.Data
@using ABLAB.Sogo.Shared.Dtos
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private IList<ApartmentDto> apartments = null!;
    private HttpClient Client = new();

    protected override async Task OnInitializedAsync()
    {
        Client.BaseAddress = new Uri("http://localhost:56861/api/2/");
        HttpResponseMessage req;
        if (apartments == null)
        {
            req = await Client.GetAsync("investment/1");
            apartments = req.Content.ReadFromJsonAsync<IList<ApartmentDto>>().Result;
        }

        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
}
